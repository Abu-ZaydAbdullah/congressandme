{"id":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","dependencies":[{"name":"/Users/abu-zaydabdullah/Documents/congressconversation/package.json","includedInParent":true,"mtime":1574135091811},{"name":"/Users/abu-zaydabdullah/Documents/congressconversation/node_modules/cheerio/node_modules/parse5/package.json","includedInParent":true,"mtime":1574134611799}],"generated":{"js":"'use strict';\n\nvar Mixin = module.exports = function (host) {\n    var originalMethods = {},\n        overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n    Object.keys(overriddenMethods).forEach(function (key) {\n        if (typeof overriddenMethods[key] === 'function') {\n            originalMethods[key] = host[key];\n            host[key] = overriddenMethods[key];\n        }\n    });\n};\n\nMixin.prototype._getOverriddenMethods = function () {\n    throw new Error('Not implemented');\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}}],"sources":{"node_modules/cheerio/node_modules/parse5/lib/utils/mixin.js":"'use strict';\n\nvar Mixin = module.exports = function (host) {\n    var originalMethods = {},\n        overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n    Object.keys(overriddenMethods).forEach(function (key) {\n        if (typeof overriddenMethods[key] === 'function') {\n            originalMethods[key] = host[key];\n            host[key] = overriddenMethods[key];\n        }\n    });\n};\n\nMixin.prototype._getOverriddenMethods = function () {\n    throw new Error('Not implemented');\n};\n\n"},"lineCount":19}},"error":null,"hash":"363f6d640aee0c9c34ac9ea0b0f1592f","cacheData":{"env":{}}}